---
- name: Create a directory to place config files
  ansible.builtin.file:
    path: "{{ tnf_dir }}/config_files"
    state: directory
    mode: '0755'

- name: Create a directory to place result files
  ansible.builtin.file:
    path: "{{ tnf_dir }}/result_files"
    state: directory
    mode: '0755'

- name: Template tnf_config.yml
  ansible.builtin.template:
    src: templates/tnf_config.yml.j2
    dest: "{{ tnf_dir }}/config_files/tnf_config.yml"
    mode: "750"

# Just do this in case preflight test suite is used.
# Use authentication file for private registry
- name: Set authentication for registry access
  when: "'preflight' in tnf_labels and partner_creds | length > 0"
  ansible.builtin.include_tasks: prepare_json_authentication.yml

- name: Copy kubeconfig file in config folder
  ansible.builtin.copy:
    src: "{{ kubeconfig_path }}"
    dest: "{{ tnf_dir }}/config_files/kubeconfig"
    mode: '0640'

- name: Remove XML JUnit results if they exist
  ansible.builtin.file:
    path: "{{ tnf_dir }}/result_files/cnf-certification-tests_junit.xml"
    state: absent

# This way of launching CNF Cert Suite is deprecated since tnf v5.1.1.
# The task automatically append these environment variables to tnf_env_vars:
# - TNF_PARTNER_REPO
# - TNF_IMAGE
# - SUPPORT_IMAGE
# We have to set ignore_errors to true (for tnf < v5.0.4) because, if any tnf test
# fails, the result of the execution will be failed. We will check log files
# afterwards to really determine if there were errors in the execution or not.
- name: Run the CNF Test Suite (tnf <= v5.1.0)
  when:
    - test_network_function_version is version("v5.1.0", "<=")
    - test_network_function_version != "HEAD"
  vars:
    tnf_partner_repo: "{{ (dci_local_registry | length) | ternary(dci_local_registry, 'quay.io') }}/testnetworkfunction"
    support_image: "debug-partner:{{ support_image_version }}"
    tnf_exec_ignore_errors: "{{ (test_network_function_version is version('v5.0.4', '>=')) | ternary('false', 'true') }}"
  environment: "{{ tnf_env_vars | combine({'TNF_PARTNER_REPO': tnf_partner_repo, 'TNF_IMAGE': tnf_image, 'SUPPORT_IMAGE': support_image}) }}"
  ansible.builtin.shell: |
    set -x

    ./run-tnf-container.sh -k {{ tnf_dir }}/config_files/kubeconfig \
    -t {{ tnf_dir }}/config_files \
    -o {{ tnf_dir }}/result_files \
    {% if tnf_labels | length > 0 %}-l '{{ tnf_labels }}' \{% endif %}
    {% if tnf_dockercfg_path is defined %}-c {{ tnf_dockercfg_path }} \{% endif %}
    -i {{ tnf_image }} &> result_files/dci-tnf-execution.log
  args:
    chdir: "{{ tnf_dir }}"
  ignore_errors: "{{ tnf_exec_ignore_errors | bool }}"

# For v5.1.1 in advance, keep using some environment variables to
# keep the definition of tnf_env_vars, but would be deprecated at some point.
- name: Common tasks for CNF Cert Suite execution (tnf >= v5.1.1 and HEAD)
  when: test_network_function_version is version("v5.1.1", ">=") or test_network_function_version == "HEAD"
  block:
    - name: Run the CNF Test Suite (tnf >= v5.1.1 and HEAD)
      vars:
        tnf_partner_repo: "{{ (dci_local_registry | length) | ternary(dci_local_registry, 'quay.io') }}/testnetworkfunction"
        support_image: "debug-partner:{{ support_image_version }}"
        certsuite_binary: "{{ (test_network_function_version == 'HEAD') | ternary('./certsuite', './cnf-certification-test/certsuite') }}"
        container_file_path: "{{ (test_network_function_version == 'HEAD') | ternary('/usr/certsuite', '/usr/tnf') }}"
        container_command: |
          {{ certsuite_binary }} run \
          {% if tnf_labels | length > 0 %}
          --label-filter='{{ tnf_labels }}' \
          {% endif %}
          {% if tnf_dockercfg_path is defined %}
          --preflight-dockerconfig={{ container_file_path }}/config/config.json \
          --allow-preflight-insecure=${TNF_ALLOW_PREFLIGHT_INSECURE:-false} \
          {% endif %}
          --output-dir={{ container_file_path }}/results \
          --offline-db=/usr/offline-db \
          --config-file={{ container_file_path }}/config/tnf_config.yml \
          --kubeconfig={{ container_file_path }}/config/kubeconfig \
          --tnf-image-repository={{ tnf_partner_repo }} \
          --tnf-debug-image={{ support_image }} \
          --create-xml-junit-file=${TNF_ENABLE_XML_CREATION:-true} \
          --non-intrusive=${TNF_NON_INTRUSIVE_ONLY:-false} \
          --log-level=${TNF_LOG_LEVEL:-debug} \
          --include-web-files=true
      environment: "{{ tnf_env_vars }}"
      ansible.builtin.shell: |
        set -x

        podman run \
        --rm \
        --network host \
        -v {{ tnf_dir }}/config_files:{{ container_file_path }}/config:Z \
        -v {{ tnf_dir }}/result_files:{{ container_file_path }}/results:Z \
        {{ tnf_image }} \
        {{ container_command }}
      register: _cc_output
      no_log: true

  always:
    - name: Save output in a file
      ansible.builtin.copy:
        content: "{{ _cc_output.stdout }}"
        dest: "{{ tnf_dir }}/result_files/dci-tnf-execution.log"
        mode: '0750'
      no_log: true

- name: Logging tasks after finishing the execution of CNF Cert
  ansible.builtin.include_tasks: logging.yml
...

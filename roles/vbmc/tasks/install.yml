---
- name: Root install
  become: true
  block:
    - name: Install packages required for virtualbmc pip package  # noqa: package-latest
      ansible.builtin.package:
        name:
          - gcc
          - libvirt
          - libvirt-devel
          - "python{% if ansible_python.version.major == 3 %}3{% endif %}-setuptools"
          - "python{% if ansible_python.version.major == 3 %}3{% endif %}-pip"
          - "python{% if ansible_python.version.major == 3 %}3{% endif %}-devel"
          - ipmitool
          - psmisc
        state: latest
        disable_gpg_check: true

    - name: Get packages info
      ansible.builtin.package_facts:
        manager: auto

    - name: Get libvirt installed version
      ansible.builtin.set_fact:
        libvirt_version: "{{ ansible_facts.packages['libvirt'][0].version }}"
      when: "'libvirt' in ansible_facts.packages"

    - name: Check if there's a virtualenv already installed
      ansible.builtin.command: virtualenv --version
      changed_when: false
      failed_when: false
      register: virtualenv_installed_check

    - name: Install virtualenv pip module
      ansible.builtin.pip:
        name: virtualenv
        extra_args: "--user"
      when: virtualenv_installed_check.rc != 0

- name: Gather info about PATH/env variables
  ansible.builtin.setup:

- name: Prepare venv for vbmc  # noqa: package-latest
  ansible.builtin.pip:
    virtualenv: "{{ vbmc_virtualenv }}"
    virtualenv_command: "virtualenv{% if ansible_distribution_major_version | int < 9 %}-{{ ansible_python.version.major }}{% endif %}"
    name:
      - pip
      - dateutils
      - libvirt-python=={{ libvirt_version }}
      - pyghmi==1.5.13
    state: latest

- name: Install python-virtualbmc with pip
  ansible.builtin.pip:
    virtualenv: "{{ vbmc_virtualenv }}"
    virtualenv_command: "virtualenv{% if ansible_distribution_major_version | int < 9 %}-{{ ansible_python.version.major }}{% endif %}"
    name: virtualbmc
    version: "{{ vbmc_version }}"
  environment:
    # to find 'virtualenv' command if available in user's ~/.local/bin,
    # otherwise will find a system-wide one
    PATH: "{{ vbmc_home }}/.local/bin:{{ ansible_env.PATH }}"

- name: Root service
  become: true
  block:
    - name: Adds VirtualBMC as systemd service
      ansible.builtin.copy:
        mode: "0664"
        dest: "{{ vbmc_systemd_unit }}"
        content: |
          [Unit]
          Description=Virtual Baseboard Management Controller Emulation service
          After=syslog.target network.target

          [Service]
          Type=simple
          User={{ vbmc_user }}
          ExecStart={{ vbmc_virtualenv }}/bin/python {{ vbmcd_bin }} --foreground
          Restart=always
          RestartSec=1

          [Install]
          WantedBy=multi-user.target

    - name: Create VirtualBMC directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0640"
        owner: root
        group: root
      with_items:
        - "/etc/virtualbmc"
        - "/var/log/virtualbmc"

    - name: Create VirtualBMC configuration file
      ansible.builtin.copy:
        mode: "0640"
        dest: "/etc/virtualbmc/virtualbmc.conf"
        content: |
          [default]
          config_dir= {{ vbmc_config_dir }}
          [log]
          logfile=/var/log/virtualbmc/virtualbmc.log
          debug=True
          [ipmi]
          session_timout=20

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Allow platform-python to be executed by systemd
      ansible.builtin.sefcontext:
        target: "{{ vbmc_virtualenv }}/bin/platform-python"
        setype: bin_t
        state: present

    - name: Apply new SELinux file context for platform-python
      ansible.builtin.command: "restorecon -irv {{ vbmc_virtualenv }}/bin/platform-python"

    - name: Restart virtualbmc
      ansible.builtin.service:
        name: virtualbmc
        state: restarted

- name: Start the Virtual BMCs
  become: true
  ansible.builtin.systemd:
    name: virtualbmc
    state: started
    enabled: true

---
- name: Regather Network Facts
  ansible.builtin.setup:
    gather_subset:
      - network
  tags:
    - network_facts

- name: Set External Subnet with IPv4  # noqa: jinja[invalid]
  ansible.builtin.set_fact:
    extcidrnet: "{{ ip | ipaddr('network') }}/{{ ip | ipaddr('prefix') }}"
  vars:
    ip: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.netmask }}"
  when:
    - extcidrnet | default([]) | length < 1
    - not ipv6_enabled|bool or
      ipv4_baremetal|bool
  tags:
    - network_facts

- name: Set External Subnet with IPv6  # noqa: jinja[invalid]
  ansible.builtin.set_fact:
    extcidrnet: "{{ ip | ipaddr('network') }}/{{ ip | ipaddr('prefix') }}"
  vars:
    ip: "{{ ansible_default_ipv6.address }}/64"
  when:
    - extcidrnet | default([]) | length < 1
    - ipv6_enabled | bool
    - not ipv4_baremetal | bool
  tags:
    - network_facts

- name: Define the IPv4 address from External subnet for SNO  # noqa: jinja[invalid]
  ansible.builtin.set_fact:
    sno_extnet_ip: "{{ extcidrnet | ipaddr('10') | ipaddr('address') }}"
  when:
    - sno_extnet_ip | default([]) | length < 1
    - not ipv6_baremetal | bool
    - ipv4_enabled | bool
  tags:
    - network_facts

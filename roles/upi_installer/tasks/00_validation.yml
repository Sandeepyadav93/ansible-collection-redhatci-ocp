---
- name: Check ansible version
  ansible.builtin.fail:
    msg: Use Ansible version 2.9 or greater to run this playbook
  when: ansible_version.full is version('2.9.0', '<')
  delegate_to: localhost
  tags:
    - always
    - validation
    - fully_disconnected

- name: Ensure Python libraries are installed
  community.general.python_requirements_info:
    dependencies:
      - netaddr
  register: _py_facts
  delegate_to: localhost
  tags:
    - always
    - validation

- name: Fail if version is undefined, empty, or not valid.
  ansible.builtin.assert:
    fail_msg: >
      The version is undefined or not valid. Use a value such as 'latest-4.8'
      or an explicit version i.e.: '4.8.2'
    that:
      - ver is defined
      - ver is version("4.8", ">=")
  vars:
    ver: "{{ version.split('latest-')[1] | default(version) }}"
  tags:
    - always
    - validation

- name: Fail if build is undefined, empty or not valid.
  ansible.builtin.assert:
    fail_msg: >
      The build is undefined, empty or not valid. Use a value such as
      'nightly', 'dev', 'ga' or 'candidate'
    that:
      - build is defined
      - build in ['nightly', 'ga', 'dev', 'candidate']
  tags:
    - always
    - validation

- name: Set release_url
  ansible.builtin.set_fact:
    release_url: "{{ (webserver_url | length) | ternary(webserver_url, '/'.join(hostvars.localhost.url.split('/')[:-1])) }}"
  tags:
    - always
    - validation

- name: Confirm whether or not internet connectivity on provisioner host
  ansible.builtin.uri:
    url: https://www.redhat.com
    status_code: [-1, 200, 301]
    timeout: 1
  retries: 3
  delay: 10
  until: check_url.status in [200, 301]
  failed_when: false
  register: check_url
  tags:
    - validation

- name: Take actions when no internet access
  when:
    - check_url.status == -1
  tags:
    - validation
    - cache
  block:
    - name: Notify when provision host has no online access
      ansible.builtin.debug:
        msg: >
           A host with online access is required. For disconnected mode include
           registry_host group in the inventory

    - name: Set fact when could not reach web server
      ansible.builtin.set_fact:
        cache_provisioner: false

- name: Check if web server responded with status code
  ansible.builtin.set_fact:
    cache_provisioner: true
  when:
    - check_url.status in [200, 301]
  tags:
    - validation
    - cache
...

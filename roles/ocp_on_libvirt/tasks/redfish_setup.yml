- name: Set hardware vendor to "kvm"
  set_fact:
    vendor: kvm
    bmc_user: "{{ vbmc_user }}"
    bmc_password: "{{ vbmc_pass }}"
  loop: "{{ groups['nodes'] }}"
  delegate_to: "{{ item }}"

- name: Install sushy-tools
  ansible.builtin.include_role:
    name: setup_sushy_tools
  vars:
    sushy_tools_port: "{{ redfish_port }}"
    repo_root_path: "{{ ocp_on_libvirt_repo_root_path }}"
    cert_country: "{{ ocp_on_libvirt_cert_country }}"
    cert_state: "{{ ocp_on_libvirt_cert_state }}"
    cert_locality: "{{ ocp_on_libvirt_cert_locality }}"
    cert_organization: "{{ ocp_on_libvirt_cert_organization }}"
    cert_organizational_unit: "{{ ocp_on_libvirt_cert_organizational_unit }}"
    sushy_ignore_boot_device: false
    inventory_validated: true

- name: Get KVM host list
  become: true
  register: _ool_vms
  community.libvirt.virt:
    command: list_vms

- name: Get KVM hosts xml
  become: true
  register: _ool_vms_xml
  loop: "{{ _ool_vms.list_vms }}"
  community.libvirt.virt:
    command: get_xml
    name: "{{ item }}"

- name: Extract UUID from xmls
  loop: "{{ range(0, _ool_vms.list_vms | length ,1) | list }}"
  register: _ool_host_uuid
  community.general.xml:
    xmlstring: "{{ _ool_vms_xml.results[item].get_xml }}"
    xpath: /domain/uuid
    content: text

- name: Store KVM hosts UUID
  loop: '{{ range(0, _ool_vms.list_vms | length ,1) | list  }}'
  ansible.builtin.set_fact:
    ool_redfish_kvm_uuid: "{{ ool_redfish_kvm_uuid | default({}) | combine({ _ool_vms.list_vms[item]: _ool_host_uuid.results[item].matches[0].uuid }) }}"

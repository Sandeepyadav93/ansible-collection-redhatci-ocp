---
- name: Create the microshift install file
  ansible.builtin.template:
    src: minimal_microshift.toml.j2
    dest: "{{ microshift_generate_iso_folder }}/minimal_microshift.toml"
    mode: '0644'

- name: Add the microshift install blueprint to image builder
  become: true
  ansible.builtin.command:
    composer-cli blueprints push {{ microshift_generate_iso_folder }}/minimal_microshift.toml
  changed_when: true

- name: Compose image
  become: true
  ansible.builtin.command: >
    composer-cli -j compose start-ostree
     --ref "rhel/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/edge"
     minimal-microshift edge-container
  register: _mgi_composed_image
  changed_when: true

- name: Set build id
  ansible.builtin.set_fact:
    mgi_build_id: "{{ _mgi_composed_image.stdout | from_json | json_query('[].body.build_id') | first }}"

- name: Wait for image build to complete
  become: true
  ansible.builtin.command:
    composer-cli -j compose status
  delay: 30
  retries: 200
  until:
    (_mgi_build_status.stdout | from_json | json_query(query_finished)) == "FINISHED"
  register: _mgi_build_status
  vars:
    query_finished: "[].body.finished[?id=='{{ mgi_build_id }}']|[0][0].queue_status"
  changed_when: true

- name: Set fact download image path
  ansible.builtin.set_fact:
    mgi_downloaded_edge_image_path: "{{ microshift_generate_iso_folder }}/{{ mgi_build_id }}-container.tar"

- name: Download the image
  become: true
  ansible.builtin.command:
    composer-cli compose image {{ mgi_build_id }} --filename {{ mgi_downloaded_edge_image_path }}
  changed_when: true

- name: Change permission of the image
  become: true
  ansible.builtin.file:
    path: "{{ mgi_downloaded_edge_image_path }}"
    mode: a+r
    owner: "{{ ansible_user }}"

- name: Load podman image
  containers.podman.podman_load:
    input: "{{ mgi_downloaded_edge_image_path }}"
  register: _mgi_image_loaded

- name: Podman run image
  containers.podman.podman_container:
    name: minimal-microshift-server
    image: "{{ _mgi_image_loaded.image.Id }}"
    ports:
      - "8085:8080"
...

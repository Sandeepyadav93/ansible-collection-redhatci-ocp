---
- name: Reset certification status
  ansible.builtin.set_fact:
    already_certified: false

- name: Get image digest
  ansible.builtin.shell: >
    set -eo pipefail;
    skopeo inspect
    {% if partner_creds | length %}
    --authfile {{ partner_creds }}
    {% else %}
    --no-creds
    {% endif %}
    docker://{{ current_operator_image }} | jq -r '.Digest'
  register: sha
  retries: 2
  delay: 30
  until: sha is succeeded

- name: Debug image digest
  ansible.builtin.debug:
    msg: "{{ sha.stdout }}"

- name: "Use Pyxis API to check if the image is certified {{ current_operator_image }}"
  vars:
    filter_params: "filter=image_id%3D%3D{{ sha.stdout }}%3Brepositories.published%3D%3Dtrue"
    include_params: "include=data.repositories.published&include=data.repositories.repository"
  ansible.builtin.uri:
    url: >
      {{ catalog_url }}/images?{{ filter_params }}&{{ include_params }}&page_size=1&page=0
    method: GET
    status_code: 200
    timeout: 120
  register: pyxis_cert_status

- name: "Skip the certification if already-in-catalog {{ current_operator_image }}"
  ansible.builtin.set_fact:
    already_certified: "{{ pyxis_cert_status.json.data | length > 0 }}"

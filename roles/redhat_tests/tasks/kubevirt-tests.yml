---
- name: "test_ redhat_tests: Run the OpenShift Virtualization conformance test suite"  # noqa: name[casing]
  block:
    - name: "Create temporal directory"
      ansible.builtin.tempfile:
        state: directory
      register: tmp_vct_dir

    - name: "Download the sonobuoy binary"
      ansible.builtin.unarchive:
        src: "https://github.com/vmware-tanzu/sonobuoy/releases/download/{{ ts_sonobuoy_version }}/sonobuoy_{{ ts_sonobuoy_version[1:] }}_linux_amd64.tar.gz"
        dest: "{{ tmp_vct_dir.path }}"
        remote_src: true
      register: result
      retries: 3
      delay: 10
      until: result is not failed

    - name: "Download the kubevirt conformance manifest"
      ansible.builtin.get_url:
        url: "https://github.com/kubevirt/kubevirt/releases/download/{{ ts_kubevirt_conformance_version }}/conformance.yaml"
        dest: "{{ tmp_vct_dir.path }}/kubevirt-conformance.yaml"
        mode: "0644"
        remote_src: true

    - name: "test_ redhat_tests: Run the Ovirt conformance tests  (connected)"  # noqa: name[casing]
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      ansible.builtin.shell:
        cmd: >
          ./sonobuoy
          run
          --sonobuoy-image={{ ts_sonobuoy_image }}
          --kube-conformance-image {{ ts_kubevirt_conformance_image }}
          --wait
          --mode quick
          --skip-preflight
          --plugin kubevirt-conformance.yaml
        chdir: "{{ tmp_vct_dir.path }}"
      ignore_errors: true
      when:
        - not (dci_disconnected | default(false) | bool)

    - name: "test_ redhat_tests: Run the kubevirt tests (disconnected)"  # noqa: name[casing]
      when: >
        (dci_disconnected | default(false) | bool) or
        (dci_local_mirror | default(false) | bool)
      block:
        - name: Replace registry in conformance image
          ansible.builtin.replace:
            path: "{{ tmp_vct_dir.path }}/kubevirt-conformance.yaml"
            regexp: "{{ ts_kubevirt_conformance_image }}"
            replace: "{{ ts_registry }}/kubevirt/conformance:{{ ts_kubevirt_conformance_version }}"

        - name: "test_ redhat_tests: Mirror sonobuoy images"  # noqa: name[casing]
          ansible.builtin.include_role:
            name: redhatci.ocp.mirror_images
          vars:
            mi_images: "{{ ts_kubevirt_images }}"
            mi_registry: "{{ ts_registry }}"
            mi_authfile: "{{ ts_registry_auth }}"

        - name: "test_ redhat_tests: Run the sonobuoy conformance tests (disconnected)"  # noqa: name[casing]
          environment:
            KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
          ansible.builtin.shell:
            cmd: >
              ./sonobuoy
              run
              --sonobuoy-image={{ ts_registry }}/sonobuoy/sonobuoy:{{ ts_sonobuoy_version }}
              --wait
              --mode quick
              --skip-preflight
              --plugin-env kubevirt-conformance.CONTAINER_PREFIX={{ ts_registry }}/kubevirt
              --plugin-env kubevirt-conformance.CONTAINER_TAG={{ ts_kubevirt_conformance_version }}
              --plugin kubevirt-conformance.yaml
            chdir: "{{ tmp_vct_dir.path }}"
          ignore_errors: true

    - name: "Pause for Logs collection to be completed"
      ansible.builtin.pause:
        seconds: 30

    - name: "test_ redhat_tests: Retrieve sonobuoy results tarball"  # noqa: name[casing]
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      ansible.builtin.shell:
        cmd: >
          ./sonobuoy
          retrieve
          -f virtualization_conformance_results.tar.gz
        chdir: "{{ tmp_vct_dir.path }}"
      register: retrieve_result
      until: retrieve_result.rc == 0
      retries: 3
      delay: 5
      ignore_errors: true

    - name: "test_ copy results tarball to the logs directory"  # noqa: name[casing]
      ansible.builtin.copy:
        src: "{{ tmp_vct_dir.path }}/virtualization_conformance_results.tar.gz"
        dest: "{{ ts_log_dir }}/virtualization_conformance_results.tar.gz"
        mode: '0644'
      ignore_errors: true

    - name: "test_ redhat_tests: Retrieve sonobuoy tests summary"  # noqa: name[casing]
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      ansible.builtin.shell:
        cmd: >
          ./sonobuoy
          results
          virtualization_conformance_results.tar.gz > {{ ts_log_dir }}/virtualization_conformance_summary.txt
        chdir: "{{ tmp_vct_dir.path }}"
      register: get_summary
      until: get_summary.rc == 0
      retries: 3
      delay: 5
      ignore_errors: true

  always:
    - name: "test_ redhat_tests: Delete cluster sonobuoy's resources"  # noqa: name[casing]
      environment:
        KUBECONFIG: "{{ ts_configs_dir }}/kubeconfig"
      ansible.builtin.shell:
        cmd: >
          ./sonobuoy
          delete
        chdir: "{{ tmp_vct_dir.path }}"

    - name: "Removing tmp directory"
      ansible.builtin.file:
        path: "{{ tmp_vct_dir.path }}"
        state: absent
        force: true
...
